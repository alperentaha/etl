---
version: '2'
services:

  postgres:
    image: debezium/postgres:latest
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - $PWD:/home/config
      - ./sql:/docker-entrypoint-initdb.d
      - ./postgres-query:/postgres-query
    command: postgres -c config_file=/home/config/postgresql.conf


  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    volumes:
      - ./data-files:/data-files
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - DEFAULT_REPLICATION_FACTOR=1

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.2
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - 8081:8081
    depends_on:
      - kafka
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081

  connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
      - postgres
    ports:
      - 8083:8083
    volumes:
      - ./confluentinc-kafka-connect-jdbc-10.7.4:/usr/local/share/kafka/plugins
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_GROUP_ID=quickstart
      - CONNECT_CONFIG_STORAGE_TOPIC=quickstart-config
      - CONNECT_OFFSET_STORAGE_TOPIC=quickstart-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=quickstart-status
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
      - CONNECT_PLUGIN_PATH=/usr/local/share/kafka/plugins
      - CONNECT_SCHEMA_REGISTRY_URL=http://0.0.0.0:8081
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081

  ksql-server:
    image: confluentinc/ksqldb-server:0.29.0
    container_name: ksql-server
    ports:
      - "8088:8088"
    depends_on:
      - kafka
      - schema-registry
    volumes:
      - ./ksql-commands/:/ksql-commands
      - ./confluentinc-kafka-connect-jdbc-10.7.4:/usr/local/share/kafka/plugins
    environment:
      - KSQL_BOOTSTRAP_SERVERS=kafka:9092
      - KSQL_KSQL_SERVICE_ID=my-ksql-cluster
      - KSQL_KSQL_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - KSQL_LISTENERS=http://0.0.0.0:8088
      - KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE=true
      - KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE=true
      - KSQL_CONNECT_PLUGIN_PATH=/usr/share/kafka/plugins
      - KSQL_KSQL_CONNECT_URL=http://connect:8083
